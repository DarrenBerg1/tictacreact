{"ast":null,"code":"var _jsxFileName = \"/Users/darrenberg/Desktop/tictactoe/tictactoe/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { Board } from './Components/Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const WIN_CONDTIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 2]];\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xPlaying, setXPlaying] = useState(true);\n  function handleBoxClick(boxIdx) {\n    const updatedBoard = board.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying === true ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    });\n    setBoard(updatedBoard);\n    setXPlaying(!xPlaying);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      board: board,\n      onClick: handleBoxClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CA/bel2Gx32w9WCEQS/GxoRWf9Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Board","jsxDEV","_jsxDEV","App","_s","WIN_CONDTIONS","board","setBoard","Array","fill","xPlaying","setXPlaying","handleBoxClick","boxIdx","updatedBoard","map","value","idx","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/darrenberg/Desktop/tictactoe/tictactoe/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\nimport { Board } from './Components/Board';\n\n\n\nfunction App() {\n\n  const WIN_CONDTIONS = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,2],\n  ]\n  \n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xPlaying, setXPlaying] = useState(true);\n\n function handleBoxClick(boxIdx) {\n  const updatedBoard = board.map((value, idx) => {\n    if(idx === boxIdx) {\n      return xPlaying === true ? \"X\" : \"O\";\n    }else{\n      return value;\n    }\n  })\n\n    setBoard(updatedBoard)\n    setXPlaying(!xPlaying)\n }\n  return (\n    <div className=\"App\">\n      <Board board={board} onClick={handleBoxClick}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,KAAK,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,aAAa,GAAG,CACpB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CACR;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE/C,SAASa,cAAcA,CAACC,MAAM,EAAE;IAC/B,MAAMC,YAAY,GAAGR,KAAK,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;MAC7C,IAAGA,GAAG,KAAKJ,MAAM,EAAE;QACjB,OAAOH,QAAQ,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG;MACtC,CAAC,MAAI;QACH,OAAOM,KAAK;MACd;IACF,CAAC,CAAC;IAEAT,QAAQ,CAACO,YAAY,CAAC;IACtBH,WAAW,CAAC,CAACD,QAAQ,CAAC;EACzB;EACC,oBACER,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjB,OAAA,CAACF,KAAK;MAACM,KAAK,EAAEA,KAAM;MAACc,OAAO,EAAER;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACpB,EAAA,CA5BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}